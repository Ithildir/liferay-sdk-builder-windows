#macro(cSharpMethodSignature $action)
	#set ($returnType = $languageUtil.getReturnType($action.response))
	#set ($methodName = $languageUtil.getMethodName($action.path))
	#set ($parameters = $action.parameters)
	#set ($parameterList = "")

	#foreach ($parameter in $parameters)
		#set ($parameterName = $languageUtil.getParameterName($parameter.name))
		#set ($parameterType = $languageUtil.getType($parameter.type))
		#set ($parameterList = "$parameterList$parameterType $parameterName")

		#if ($foreach.hasNext)
			#set ($parameterList = "$parameterList, ")
		#end
	#end

	#if ($returnType == $VOID)
		#set ($methodReturnType = "Task")
	#else
		#set ($methodReturnType = "Task<$returnType>")
	#end

	public async $methodReturnType $methodName($parameterList)
#end

//------------------------------------------------------------------------------
// <copyright file=${esc.q}${className}.cs${esc.q}>
//    Copyright (c) 2014-present Andrea Di Giorgi
//
//    Permission is hereby granted, free of charge, to any person obtaining a
//    copy of this software and associated documentation files (the "Software"),
//    to deal in the Software without restriction, including without limitation
//    the rights to use, copy, modify, merge, publish, distribute, sublicense,
//    and/or sell copies of the Software, and to permit persons to whom the
//    Software is furnished to do so, subject to the following conditions:
//
//    The above copyright notice and this permission notice shall be included in
//    all copies or substantial portions of the Software.
//
//    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
//    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
//    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
//    DEALINGS IN THE SOFTWARE.
// </copyright>
// <author>Andrea Di Giorgi</author>
// <website>https://github.com/Ithildir/liferay-sdk-builder-windows</website>
//------------------------------------------------------------------------------

##n

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;

##n

#set ($context = $discovery.context)

namespace $package
{
##t	public class $className : ServiceBase
##t	{
##t		public $className(ISession session)
##t			: base(session)
##t		{
##t		}

##n

#foreach ($action in $actions)
	#set ($parameters = $action.parameters)

	##t		#cSharpMethodSignature($action)
	##t		{

	##t			var _parameters = new JsonObject();

	##n

	#set ($invokeMethod = "InvokeAsync")

	#foreach ($parameter in $parameters)
		#set ($parameterName = $parameter.name)
		#set ($parameterType = $languageUtil.getType($parameter.type))

		#if ($parameterType == $STREAM)
			#set ($invokeMethod = "UploadAsync")
		#end

		#set ($parameterValue = $languageUtil.getParameterName($parameterName))

		#if ($parameterType == $JSON_OBJECT_WRAPPER)
			##t			this.MangleWrapper(_parameters, ${esc.q}$parameterName${esc.q}, ${esc.q}$languageUtil.getJSONWrapperClassName($parameter.type)${esc.q}, $parameterValue);
		#else
			##t			_parameters.Add(${esc.q}$parameterName${esc.q}, $parameterValue);
		#end

		#if (!$foreach.hasNext)
			##n
		#end
	#end

	##t			var _command = new JsonObject()
	##t			{
	##t				{ ${esc.q}$context$action.path${esc.q}, _parameters }
	##t			};

	##n

	#set ($ienumerableReturnCastType = $languageUtil.getIEnumerableCastType($action.response))

	#if ($returnType == $VOID)
		##t			await this.Session.$invokeMethod(_command);
	#else
		##t			var _obj = await this.Session.$invokeMethod(_command);

		##n

		#if ($ienumerableReturnCastType != "")
			##t			var _jsonArray = (JsonArray)_obj;

			##n

			##t			return _jsonArray.Cast<$ienumerableReturnCastType>();
		#else
			##t			return ($returnType)_obj;
		#end
	#end

	##t		}

	#if ($foreach.hasNext)
		##n
	#end
#end
##t	}
}